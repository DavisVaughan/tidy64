% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy64.R
\name{tidy64}
\alias{tidy64}
\title{Helper for constructing tidy64 objects}
\usage{
tidy64(x = double())
}
\arguments{
\item{x}{\verb{[double / logical / integer]}

A vector to convert to tidy64. Double vectors must be integerish.}
}
\description{
\code{tidy64()} is the easiest way to construct new tidy64 objects from existing
integer, double, or logical vectors.

\code{tidy64()} is meant to be a lossless converter to tidy64. Integers and
logicals always convert to tidy64 losslessly, but doubles might not. To
guarantee a lossless conversion, a double must be integerish
(have no fractional value).

\code{\link[=as_tidy64]{as_tidy64()}} allows lossy conversion to tidy64. It will truncate doubles
towards \code{0}. It is also the way to parse character vectors as tidy64.
}
\examples{
tidy64(1)
try(tidy64(1.5))
}
